{"/home/travis/build/npmtest/node-npmtest-polyjuice/test.js":"/* istanbul instrument in package npmtest_polyjuice */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-polyjuice/lib.npmtest_polyjuice.js":"/* istanbul instrument in package npmtest_polyjuice */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_polyjuice = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_polyjuice = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-polyjuice/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-polyjuice && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_polyjuice */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_polyjuice\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_polyjuice.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_polyjuice.rollup.js'] =\n            local.assetsDict['/assets.npmtest_polyjuice.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_polyjuice.__dirname + '/lib.npmtest_polyjuice.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/index.js":"module.exports = require('./lib/polyjuice')\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/polyjuice.js":"/*\n * Polyjuice\n * Copyright(c) 2015 Breno Lima de Freitas <brenolimadefreitas@gmail.com>\n * MIT Licensed\n */\n\n'use strict'\n\nvar jshint = require('./polyjuice/jshint')\nvar jscs = require('./polyjuice/jscs')\nvar eslint = require('./polyjuice/eslint')\n\nmodule.exports.from = {\n  jshint: jshint,\n  jscs: jscs,\n  eslint: eslint\n}\n\nmodule.exports.to = {\n  eslint: function(jshint_src, jscs_src, log) {\n    var jshint_json = jshint(jshint_src, log)\n    var jscs_json = jscs(jscs_src, log)\n\n    for (var name in jscs_json.rules) {\n      jshint_json.rules[name] = jscs_json.rules[name]\n    }\n\n    return jshint_json\n  },\n\n  jscs: function(eslint_src, log) {\n    var results = eslint(eslint_src, log)\n\n    return results.jscs || {}\n  },\n\n  jshint: function(eslint_src, log) {\n    var results = eslint(eslint_src, log)\n\n    return results.jshint || {}\n  }\n}\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/polyjuice/jshint.js":"/*\n * Polyjuice\n * Copyright(c) 2015 Breno Lima de Freitas <brenolimadefreitas@gmail.com>\n * MIT Licensed\n */\n\n'use strict'\n\nvar fs = require('fs')\nvar path = require('path')\nvar stripJsonComments = require('strip-json-comments')\nvar interpreter = require('./interpreter')\nvar truth_tbl = require('../assets/eslint_truth_tbl.json')\nvar objectAssign = require('object-assign')\n\nmodule.exports = function(filename, log, encoding) {\n  encoding = encoding || 'utf8'\n\n  var data = {}\n\n  filename.forEach(function(file) {\n    var read = JSON.parse(stripJsonComments(fs.readFileSync(file, encoding)))\n    data = objectAssign(data, read)\n  })\n\n  var output = {}\n\n  var rulesPath = path.join(__dirname, '../dictionaries/jshint/')\n\n  var dictionary = {}\n\n  fs.readdirSync(rulesPath).forEach(function(name) {\n    var rule = path.join(rulesPath, name)\n\n    dictionary[name.split('.')[0]] = require(rule)\n  });\n\n  output.env = {}\n\n  dictionary._env.forEach(function(env) {\n    var from = env\n    var to = env\n\n    if (typeof env !== 'string') {\n      from = env[0]\n      to = env[1]\n    }\n\n    if (from in data && data[from]) {\n      output.env[to] = true\n    }\n  })\n\n  output.globals = data.globals || {}\n\n  output.rules = interpreter(dictionary, data, truth_tbl, log)\n\n  return output\n}\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/polyjuice/interpreter.js":"/*\n * Polyjuice\n * Copyright(c) 2015 Breno Lima de Freitas <brenolimadefreitas@gmail.com>\n * MIT Licensed\n */\n\n'use strict'\n\nvar Reader = require('./reader')\n\nmodule.exports = function(dictionary, json_data, truth_tbl, discarded) {\n  var output = {}\n\n  discarded = discarded || []\n\n  var fn = function(input) {\n    if (typeof input === 'number') {\n      return true\n    }\n\n    return input ? true : false\n  }\n\n  var reader = new Reader(dictionary, fn, truth_tbl, output)\n\n  for (var name in json_data) {\n    var tuple = reader.get(name, json_data[name])\n\n    var target = reader.target(name)\n\n    if (Object.keys(tuple).length === 0) {\n      discarded.push(name)\n    }\n\n    var reference = output\n\n    if (target) {\n      output[target] = output[target] || {}\n\n      reference = output[target]\n    }\n\n    for (var newRule in tuple) {\n      reference[newRule] = tuple[newRule]\n    }\n  }\n\n  return output\n}\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/polyjuice/reader.js":"/*\n * Polyjuice\n * Copyright(c) 2015 Breno Lima de Freitas <brenolimadefreitas@gmail.com>\n * MIT Licensed\n */\n\nmodule.exports = function(dictionary, truth_fn, truth_tbl, current) {\n  this.dictionary = dictionary\n  this.truth_fn = truth_fn\n  this.truth_tbl = truth_tbl\n  this.current = current || {}\n\n  var that = this\n\n  this.target = function(key) {\n    var read = that.dictionary[key]\n\n    return read ? read.target : null\n  }\n\n  this.get = function(key, value) {\n    var read = that.dictionary[key]\n\n    if (!read || value === null || value === 'undefined') {\n      return {}\n    }\n\n    if (typeof read === 'function') {\n      return read(that.current[read.name], value)\n    }\n\n    if (typeof read === 'string') {\n      read = [read]\n    }\n\n    var tmp = {}\n    var isTruthy = that.truth_fn(value)\n\n    if (Array.isArray(read)) {\n      read.forEach(function(rule) {\n        var tbl = that.truth_tbl[isTruthy]\n\n        tmp[rule] = (typeof value === 'number') ? value : tbl\n      })\n\n      return tmp\n    }\n\n    if (!read.name && !read.eval) {\n      throw new Error('Missing rule name for `' + key + '`')\n    }\n\n    if (read.eval && typeof read.eval !== 'function') {\n      throw new Error('`eval` must be a function')\n    }\n\n    var directive = isTruthy ? read.truthy : read.falsy\n\n    directive = read.eval || directive\n\n    if (directive !== undefined && directive !== null) {\n      if (typeof directive === 'function') {\n        tmp[read.name] = directive(that.current[read.name], value)\n      } else {\n        tmp[read.name] = directive\n      }\n    } else {\n      tmp[read.name] = that.truth_tbl[isTruthy]\n    }\n\n    return tmp\n  }\n\n  return this\n}\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/polyjuice/jscs.js":"/*\n * Polyjuice\n * Copyright(c) 2015 Breno Lima de Freitas <brenolimadefreitas@gmail.com>\n * MIT Licensed\n */\n\n'use strict'\n\nvar fs = require('fs')\nvar path = require('path')\nvar stripJsonComments = require('strip-json-comments')\nvar interpreter = require('./interpreter')\nvar truth_tbl = require('../assets/eslint_truth_tbl.json')\nvar objectAssign = require('object-assign')\n\nmodule.exports = function(filename, log, encoding) {\n  encoding = encoding || 'utf8'\n\n  var data = {}\n\n  filename.forEach(function(file) {\n    var read = JSON.parse(stripJsonComments(fs.readFileSync(file, encoding)))\n    data = objectAssign(data, read)\n  })\n\n  var output = {}\n\n  var rulesPath = path.join(__dirname, '../dictionaries/jscs/')\n\n  var dictionary = {}\n\n  fs.readdirSync(rulesPath).forEach(function(name) {\n    var rule = path.join(rulesPath, name)\n\n    dictionary[name.split('.')[0]] = require(rule)\n  });\n\n  output.rules = interpreter(dictionary, data, truth_tbl, log)\n\n  return output\n}\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/polyjuice/eslint.js":"/*\n * Polyjuice\n * Copyright(c) 2015 Breno Lima de Freitas <brenolimadefreitas@gmail.com>\n * MIT Licensed\n */\n\n'use strict'\n\nvar fs = require('fs')\nvar path = require('path')\nvar CLIEngine = require('eslint').CLIEngine\nvar interpreter = require('./interpreter')\nvar truth_tbl = require('../assets/jshint_jscs_truth_tbl.json')\nvar objectAssign = require('object-assign')\n\nmodule.exports = function(filename, log) {\n  var cli = new CLIEngine()\n  var data = {}\n\n  filename.forEach(function(file) {\n    var read = cli.getConfigForFile(file)\n    data = objectAssign(data, read.rules)\n  })\n\n  var rulesPath = path.join(__dirname, '../dictionaries/eslint/')\n\n  var dictionary = {}\n\n  fs.readdirSync(rulesPath).forEach(function(name) {\n    var rule = path.join(rulesPath, name)\n\n    dictionary[name.split('.')[0]] = require(rule)\n  })\n\n  return interpreter(dictionary, data, truth_tbl, log)\n}\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/bin.js":"#!/usr/bin/env node\n\nvar pkg = require('../package')\n\nvar yargs = require('yargs')\n  .version(function() {\n    return pkg.version\n  })\n  .usage('Usage: $0 <command> <filename>')\n  .option('jscs', {\n    describe: 'the jscs config file',\n    type: 'array'\n  })\n  .option('jshint', {\n    describe: 'the jshint config file',\n    type: 'array'\n  })\n  .option('eslint', {\n    describe: 'the eslint config file',\n    type: 'array'\n  })\n  .option('to-jscs', {\n    describe: 'whether the output should be jscs',\n    type: 'boolean'\n  })\n  .option('to-jshint', {\n    describe: 'whether the output should be jshint',\n    type: 'boolean'\n  })\n  .option('discarded', {\n    alias: 'd',\n    describe: 'show discarded rules when transpiling'\n  })\n  .help('h')\n  .alias('h', 'help')\n  .alias('v', 'version')\n  .epilog('Breno Lima de Freitas <brenolimadefreitas@gmail.com> (https://breno.io/)')\n\nvar argv = yargs.argv\n\nvar polyjuice = require('./polyjuice')\n\nvar output = {}\n\nvar discarded = []\n\nif (argv.jshint && argv.jscs) {\n  output = polyjuice.to.eslint(argv.jshint, argv.jscs, discarded)\n} else if (argv.jshint) {\n  output = polyjuice.from.jshint(argv.jshint, discarded)\n} else if (argv.jscs) {\n  output = polyjuice.from.jscs(argv.jscs, discarded)\n} else if (argv.eslint) {\n  var method = argv['to-jscs'] ? 'jscs' : 'jshint'\n\n  output = polyjuice.to[method](argv.eslint, discarded)\n} else {\n  output = null\n  yargs.showHelp()\n}\n\nif (argv.discarded && output !== null) {\n  discarded.forEach(function(rule) {\n    console.log(rule)\n  })\n\n  if (discarded.length === 0) {\n    console.log('No rule has been discarded')\n  }\n} else if (output !== null) {\n  console.log(JSON.stringify(output, null, 2))\n}\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/eslint/array-bracket-spacing.js":"/**\n* @fileoverview Translation for `array-bracket-spacing` (ESLint) to JSCS\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  target: 'jscs',\n  eval: function(__current__, value) {\n    var result = true\n    var verb = 'require'\n    var obj = {}\n\n    if (value[1] === 'never') {\n      verb = 'disallow'\n    }\n\n    if (value[2] && (value[2].objectsInArrays || value[2].arraysInArrays)) {\n      result = {\n        allExcept: value[2].objectsInArrays ? ['{', '}'] : []\n      }\n\n      result.allExcept =\n        result.allExcept.concat(value[2].arraysInArrays ? ['[', ']'] : [])\n    }\n\n    obj[verb + 'SpacesInsideArrayBrackets'] = result\n    obj[verb + 'SpacesInsideObjectBrackets'] = result\n\n    return obj\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/eslint/arrow-parens.js":"/**\n* @fileoverview Translation for `arrow-parens` (ESLint) to JSCS\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  target: 'jscs',\n  eval: function(__current__, value) {\n    if (value[0] === 0 || value === 0) {\n      return { disallowParenthesesAroundArrowParam: true }\n    }\n\n    return { requireParenthesesAroundArrowParam: true }\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/eslint/block-scoped-var.js":"/**\n* @fileoverview Translation for `block-scoped-var` (ESLint) to JSHint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  target: 'jshint',\n  name: 'funcscope'\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/eslint/brace-style.js":"/**\n* @fileoverview Translation for `brace-style` (ESLint) to JSCS\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  target: 'jscs',\n  eval: function(__current__, value) {\n    var spacedKeywords = ['do', 'for', 'if', 'else', 'switch', 'case', 'try',\n    'catch', 'finally', 'void', 'while', 'with', 'return', 'typeof',\n    'function']\n\n    if (value[0] > 0 && value[1] === 'stroustrup'\n        && value[2] && value[2].allowSingleLine) {\n      return { requireKeywordsOnNewLine: spacedKeywords }\n    }\n\n    return { disallowKeywordsOnNewLine: spacedKeywords }\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/eslint/camelcase.js":"/**\n* @fileoverview Translation for `camelcase` (ESLint) to JSCS\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  target: 'jscs',\n  name: 'requireCamelCaseOrUpperCaseIdentifiers',\n  truthy: function(__current__, value) {\n    if (value[1] && value[1].properties === 'never') {\n      return 'ignoreProperties'\n    }\n\n    return true\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/eslint/comma-dangle.js":"/**\n* @fileoverview Translation for `comma-dangle` (ESLint) to JSCS\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  target: 'jscs',\n  eval: function(__current__, value) {\n    if (value === 2 || value[1] === 'never') {\n      return { disallowTrailingComma: true }\n    }\n\n    return { requireTrailingComma: true }\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/eslint/comma-spacing.js":"/**\n* @fileoverview Translation for `comma-spacing` (ESLint) to JSCS\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  target: 'jscs',\n  eval: function(__current__, value) {\n    if (value[0] > 0 && value[1] && !value[1].before) {\n      return { requireSpaceBeforeComma: true }\n    }\n\n    return { disallowSpaceBeforeComma: true }\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/eslint/comma-style.js":"/**\n* @fileoverview Translation for `comma-style` (ESLint) to JSCS\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  target: 'jscs',\n  eval: function(__current__, value) {\n    if (value[0] > 0 && value[1] === 'first') {\n      return { disallowCommaBeforeLineBreak: true }\n    }\n\n    return { requireCommaBeforeLineBreak: true }\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/eslint/complexity.js":"/**\n* @fileoverview Translation for `complexity` (ESLint) to JSHint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  target: 'jshint',\n  name: 'maxcomplexity',\n  truthy: function(__current__, value) {\n    return value[1]\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/eslint/consistent-this.js":"/**\n* @fileoverview Translation for `consistent-this` (ESLint) to JSCS\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  target: 'jscs',\n  name: 'safeContextKeyword',\n  truthy: function(__current__, value) {\n    return value[1]\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/eslint/curly.js":"/**\n* @fileoverview Translation for `curly` (ESLint) to JSCS\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  target: 'jscs',\n  eval: function(__current__, value) {\n    if (value[1] === 'multi-line') {\n      return { disallowCurlyBraces: true }\n    }\n\n    return { requireCurlyBraces: true }\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/eslint/dot-notation.js":"/**\n* @fileoverview Translation for `dot-notation` (ESLint) to JSCS\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  target: 'jscs',\n  name: 'requireDotNotation',\n  truthy: function(__current__, value) {\n    if (value[1] && value[1].allowPattern === '^[a-z]+(_[a-z]+)+$') {\n      var allExcept = ['snake_case']\n\n      if (value[1].allowKeywords) {\n        allExcept.push('keywords')\n      }\n\n      return { allExcept: allExcept }\n    }\n\n    return true\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/eslint/eol-last.js":"/**\n* @fileoverview Translation for `eol-last` (ESLint) to JSCS\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  target: 'jscs',\n  name: 'requireLineFeedAtFileEnd'\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/eslint/eqeqeq.js":"/**\n* @fileoverview Translation for `eqeqeq` (ESLint) to JSHint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  target: 'jshint',\n  name: 'eqeqeq'\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/eslint/func-names.js":"/**\n* @fileoverview Translation for `func-names` (ESLint) to JSCS\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  target: 'jscs',\n  eval: function(__current__, value) {\n    if (value[0] === 0 || value === 0) {\n      return {}\n    }\n\n    return {\n      requireNamedUnassignedFunctions: true,\n      disallowAnonymousFunctions: true\n    }\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/eslint/func-style.js":"/**\n* @fileoverview Translation for `func-style` (ESLint) to JSCS\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  target: 'jscs',\n  name: 'disallowFunctionDeclarations',\n  truthy: true\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/eslint/guard-for-in.js":"/**\n* @fileoverview Translation for `guard-for-in` (ESLint) to JSHint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  target: 'jshint',\n  name: 'forin'\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/eslint/id-match.js":"/**\n* @fileoverview Translation for `id-match` (ESLint) to JSCS\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  target: 'jscs',\n  name: 'disallowIdentifierNames',\n  truthy: function(__current__, value) {\n    return value[1].slice(2, -2).split('|')\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/eslint/indent.js":"/**\n* @fileoverview Translation for `indent` (ESLint) to JSCS\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  target: 'jscs',\n  name: 'validateIndentation',\n  truthy: function(__current__, value) {\n    if (value === 2) {\n      return 4\n    }\n\n    return value[1] === 'tab' ? '\\t' : value[1]\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/eslint/key-spacing.js":"/**\n* @fileoverview Translation for `key-spacing` (ESLint) to JSCS\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  target: 'jscs',\n  eval: function(__current__, value) {\n    if (value[0] === 0 || value === 0) {\n      return {}\n    }\n\n    if (value[1].align === 'colon') {\n      return {\n        requireAlignedObjectValues: true,\n        disallowSpaceAfterObjectKeys: {\n          allExcept: ['aligned']\n        }\n      }\n    }\n\n    var obj = {}\n\n    if (value[1].afterColon === true) {\n      obj.requireSpaceBeforeObjectValues = true\n    } else if (value[1].afterColon === false) {\n      obj.disallowSpaceBeforeObjectValues = true\n    }\n\n    if (value[1].beforeColon === true) {\n      obj.requireSpaceAfterObjectKeys = true\n    } else if (value[1].beforeColon === false) {\n      obj.disallowSpaceAfterObjectKeys = true\n    }\n\n    return obj\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/eslint/linebreak-style.js":"/**\n* @fileoverview Translation for `linebreak-style` (ESLint) to JSCS\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  target: 'jscs',\n  name: 'validateLineBreaks',\n  truthy: function(__current__, value) {\n    return value[1] === 'windows' ? 'CLRF' : 'LF'\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/eslint/lines-around-comment.js":"/**\n* @fileoverview Translation for `lines-around-comment` (ESLint) to JSCS\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  target: 'jscs',\n  eval: function(__current__, value) {\n    if (value[0] > 0 || value > 0) {\n      return {\n        requirePaddingNewLinesBeforeLineComments: true,\n        requireSpaceAfterLineComment: true\n      }\n    }\n\n    return {}\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/eslint/max-depth.js":"/**\n* @fileoverview Translation for `max-depth` (ESLint) to JSHint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  target: 'jshint',\n  name: 'maxdepth',\n  truthy: function(__current__, value) {\n    return value[1]\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/eslint/max-len.js":"/**\n* @fileoverview Translation for `max-len` (ESLint) to JSCS\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  target: 'jscs',\n  name: 'maximumLineLength',\n  truthy: function(__current__, value) {\n    return value[1]\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/eslint/max-params.js":"/**\n* @fileoverview Translation for `max-params` (ESLint) to JSHint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  target: 'jshint',\n  name: 'maxparams',\n  truthy: function(__current__, value) {\n    return value[1]\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/eslint/max-statements.js":"/**\n* @fileoverview Translation for `max-statements` (ESLint) to JSHint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  target: 'jshint',\n  name: 'maxstatements',\n  truthy: function(__current__, value) {\n    return value[1]\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/eslint/new-cap.js":"/**\n* @fileoverview Translation for `new-cap` (ESLint) to JSCS\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  target: 'jscs',\n  name: 'requireCapitalizedConstructors',\n  truthy: function(__current__, value) {\n    if (value[1]) {\n      var a = value[1].newIsCapExceptions || []\n      var b = value[1].capIsNewExceptions || []\n\n      return { allExcept: a.concat(b) }\n    }\n\n    return true\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/eslint/newline-after-var.js":"/**\n* @fileoverview Translation for `newline-after-var` (ESLint) to JSCS\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  target: 'jscs',\n  eval: function(__current__, value) {\n    if (value > 0 || (value[0] > 0 && value[1] === 'always')) {\n      return {\n        requireLineBreakAfterVariableAssignment: true,\n        requirePaddingNewLineAfterVariableDeclaration: true\n      }\n    }\n\n    return {}\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/eslint/no-bitwise.js":"/**\n* @fileoverview Translation for `no-bitwise` (ESLint) to JSHint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  target: 'jshint',\n  name: 'bitwise'\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/eslint/no-caller.js":"/**\n* @fileoverview Translation for `no-caller` (ESLint) to JSHint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  target: 'jshint',\n  name: 'noarg'\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/eslint/no-cond-assign.js":"/**\n* @fileoverview Translation for `no-cond-assign` (ESLint) to JSHint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  target: 'jshint',\n  name: 'boss'\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/eslint/no-console.js":"/**\n* @fileoverview Translation for `no-console` (ESLint) to JSCS\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  target: 'jscs',\n  name: 'predef',\n  truthy: function(__current__) {\n    var list = __current__ || []\n\n    list.push('-console')\n\n    return list\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/eslint/no-debugger.js":"/**\n* @fileoverview Translation for `no-debugger` (ESLint) to JSHint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  target: 'jshint',\n  name: 'debug'\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/eslint/no-empty.js":"/**\n* @fileoverview Translation for `no-empty` (ESLint) to JSCS\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  target: 'jscs',\n  name: 'disallowEmptyBlocks'\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/eslint/no-eq-null.js":"/**\n* @fileoverview Translation for `no-eq-null` (ESLint) to JSHint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  target: 'jshint',\n  name: 'eqnull'\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/eslint/no-eval.js":"/**\n* @fileoverview Translation for `no-eval` (ESLint) to JSHint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  target: 'jshint',\n  name: 'evil'\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/eslint/no-extend-native.js":"/**\n* @fileoverview Translation for `no-extend-native` (ESLint) to JSHint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  target: 'jshint',\n  name: 'freeze'\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/eslint/no-extra-parens.js":"/**\n* @fileoverview Translation for `no-extra-parens` (ESLint) to JSHint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  target: 'jshint',\n  name: 'singleGroups',\n  truthy: false,\n  falsy: true\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/eslint/no-implicit-coercion.js":"/**\n* @fileoverview Translation for `no-implicit-coercion` (ESLint) to JSCS\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  target: 'jscs',\n  name: 'disallowImplicitTypeConversion',\n  truthy: function(__current__, value) {\n    var list = []\n\n    value = value[1]\n\n    var counterpart = {\n      'boolean': 'boolean',\n      'string': 'string',\n      'number': 'numeric'\n    }\n\n    for (var type in value) {\n      if (type in counterpart) {\n        list.push(counterpart[type])\n      }\n    }\n\n    return list\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/eslint/no-invalid-this.js":"/**\n* @fileoverview Translation for `no-invalid-this` (ESLint) to JSHint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  target: 'jshint',\n  name: 'validthis'\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/eslint/no-irregular-whitespace.js":"/**\n* @fileoverview Translation for `no-irregular-whitespace` (ESLint) to JSHint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  target: 'jshint',\n  name: 'nonbsp'\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/eslint/no-iterator.js":"/**\n* @fileoverview Translation for `no-iterator` (ESLint) to JSHint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  target: 'jshint',\n  name: 'iterator'\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/eslint/no-loop-func.js":"/**\n* @fileoverview Translation for `no-loop-func` (ESLint) to JSHint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  target: 'jshint',\n  name: 'loopfunc'\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/eslint/no-mixed-spaces-and-tabs.js":"/**\n* @fileoverview Translation for `no-mixed-spaces-and-tabs` (ESLint) to JSCS\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  target: 'jscs',\n  name: 'disallowMixedSpacesAndTabs'\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/eslint/no-multiple-empty-lines.js":"/**\n* @fileoverview Translation for `no-multiple-empty-lines` (ESLint) to JSCS\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  target: 'jscs',\n  name: 'disallowMultipleLineBreaks'\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/eslint/no-multi-spaces.js":"/**\n* @fileoverview Translation for `no-multi-spaces` (ESLint) to JSCS\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  target: 'jscs',\n  name: 'disallowMultipleSpaces'\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/eslint/no-multi-str.js":"/**\n* @fileoverview Translation for `no-multi-str` (ESLint) to JSCS\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  target: 'jscs',\n  name: 'disallowMultipleLineStrings'\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/eslint/no-new-func.js":"/**\n* @fileoverview Translation for `no-new-func` (ESLint) to JSHint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  target: 'jshint',\n  name: 'supernew'\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/eslint/no-new.js":"/**\n* @fileoverview Translation for `no-new` (ESLint) to JSHint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  target: 'jshint',\n  name: 'nonew'\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/eslint/no-new-wrappers.js":"/**\n* @fileoverview Translation for `no-new-wrappers` (ESLint) to JSHint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  target: 'jshint',\n  name: 'supernew'\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/eslint/no-plusplus.js":"/**\n* @fileoverview Translation for `no-plusplus` (ESLint) to JSHint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  target: 'jshint',\n  name: 'plusplus'\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/eslint/no-proto.js":"/**\n* @fileoverview Translation for `no-proto` (ESLint) to JSHint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  target: 'jshint',\n  name: 'proto'\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/eslint/no-script-url.js":"/**\n* @fileoverview Translation for `no-script-url` (ESLint) to JSHint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  target: 'jshint',\n  name: 'scripturl'\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/eslint/no-sequences.js":"/**\n* @fileoverview Translation for `no-sequences` (ESLint) to JSHint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  target: 'jshint',\n  name: 'nocomma'\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/eslint/no-shadow.js":"/**\n* @fileoverview Translation for `no-shadow` (ESLint) to JSHint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  target: 'jshint',\n  name: 'shadow',\n  eval: function(__current__, value) {\n    if (value === 2) {\n      return false\n    }\n\n    if (value === 0) {\n      return true\n    }\n\n    return 'outer'\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/eslint/no-spaced-func.js":"/**\n* @fileoverview Translation for `no-spaced-func` (ESLint) to JSCS\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  target: 'jscs',\n  name: 'disallowSpacesInCallExpression'\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/eslint/no-sparse-arrays.js":"/**\n* @fileoverview Translation for `no-sparse-arrays` (ESLint) to JSHint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  target: 'jshint',\n  name: 'elision'\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/eslint/no-trailing-spaces.js":"/**\n* @fileoverview Translation for `no-trailing-spaces` (ESLint) to JSCS\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  target: 'jscs',\n  name: 'disallowTrailingWhitespace',\n  truthy: function(__current__, value) {\n    if (value[1] && value[1].skipBlankLines) {\n      return 'ignoreEmptyLines'\n    }\n\n    return true\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/eslint/no-undef.js":"/**\n* @fileoverview Translation for `no-undef` (ESLint) to JSHint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  target: 'jshint',\n  name: 'undef'\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/eslint/no-underscore-dangle.js":"/**\n* @fileoverview Translation for `no-underscore-dangle` (ESLint) to JSCS\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  target: 'jscs',\n  name: 'disallowDanglingUnderscores'\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/eslint/no-unused-expressions.js":"/**\n* @fileoverview Translation for `no-unused-expressions` (ESLint) to JSHint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  target: 'jshint',\n  name: 'expr'\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/eslint/no-unused-vars.js":"/**\n* @fileoverview Translation for `no-unused-vars` (ESLint) to JSHint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  target: 'jshint',\n  name: 'unused'\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/eslint/no-use-before-define.js":"/**\n* @fileoverview Translation for `no-use-before-define` (ESLint) to JSHint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  target: 'jshint',\n  name: 'latedef'\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/eslint/no-var.js":"/**\n* @fileoverview Translation for `no-var` (ESLint) to JSHint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  target: 'jshint',\n  name: 'varstmt'\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/eslint/no-warning-comments.js":"/**\n* @fileoverview Translation for `no-warning-comments` (ESLint) to JSCS\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  target: 'jscs',\n  name: 'disallowKeywordsInComments',\n  truthy: function(__current__, value) {\n    return (value[1] && value[1].terms) ? value[1].terms : []\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/eslint/no-with.js":"/**\n* @fileoverview Translation for `no-with` (ESLint) to JSCS\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  target: 'jscs',\n  name: 'disallowKeywords',\n  truthy: function(__current__) {\n    var list = __current__ || []\n\n    list.push('with')\n\n    return list\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/eslint/one-var.js":"/**\n* @fileoverview Translation for `one-var` (ESLint) to JSCS\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  target: 'jscs',\n  eval: function(__current__, value) {\n    if (value[1] && value[1] === 'never') {\n      return {\n        disallowMultipleVarDecl: true,\n        requireMultipleVarDecl: true\n      }\n    }\n\n    if (value[0] > 0 || value > 0) {\n      return { disallowMultipleVarDecl: true }\n    }\n\n    return {}\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/eslint/operator-linebreak.js":"/**\n* @fileoverview Translation for `operator-linebreak` (ESLint) to JSCS\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  target: 'jscs',\n  eval: function(__current__, value) {\n    if (value[1] && value[1] === 'before') {\n      return { disallowOperatorBeforeLineBreak: true }\n    } else if (value[1] && value[1] === 'after') {\n      return { requireOperatorBeforeLineBreak: true }\n    }\n\n    return {}\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/eslint/padded-blocks.js":"/**\n* @fileoverview Translation for `padded-blocks` (ESLint) to JSCS\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  target: 'jscs',\n  eval: function(__current__, value) {\n    if (value[1] && value[1] === 'never') {\n      return { disallowPaddingNewlinesInBlocks: true }\n    } else if (value[1] && value[1] === 'always') {\n      return { requirePaddingNewlinesInBlocks: true }\n    }\n\n    return {}\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/eslint/prefer-spread.js":"/**\n* @fileoverview Translation for `prefer-spread` (ESLint) to JSCS\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  target: 'jscs',\n  name: 'requireSpread'\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/eslint/quote-props.js":"/**\n* @fileoverview Translation for `quote-props` (ESLint) to JSCS\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  target: 'jscs',\n  eval: function(__current__, value) {\n    if (value[2]) {\n      return { disallowQuotedKeysInObjects: 'allButReserved' }\n    }\n\n    if (value[1] === 'as-needed') {\n      return { disallowQuotedKeysInObjects: true }\n    }\n\n    if (value[0] > 0 || value > 0) {\n      return { requireQuotedKeysInObjects: true }\n    }\n\n    return {}\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/eslint/quotes.js":"/**\n* @fileoverview Translation for `quotes` (ESLint) to JSCS\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  target: 'jscs',\n  eval: function(__current__, value) {\n    if (value[1] === 'backtick') {\n      return { requireTemplateStrings: true }\n    }\n\n    var mark = value[1] === 'double' ? '\"' : '\\''\n\n    if (value[2] === 'avoid-escape') {\n      return {\n        validateQuoteMarks: {\n          mark: mark,\n          escape: true\n        }\n      }\n    }\n\n    if (value[0] === 0 || value === 0) {\n      return {}\n    }\n\n    return { validateQuoteMarks: mark }\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/eslint/require-yield.js":"/**\n* @fileoverview Translation for `require-yield` (ESLint) to JSHint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  target: 'jshint',\n  name: 'noyield'\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/eslint/semi.js":"/**\n* @fileoverview Translation for `semi` (ESLint) to JSCS\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  target: 'jscs',\n  eval: function(__current__, value) {\n    if (value[0] === 0 || value === 0) {\n      return {}\n    }\n\n    if (value[1] === 'always') {\n      return { requireSemicolons: true }\n    }\n\n    return { disallowSemicolons: true }\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/eslint/semi-spacing.js":"/**\n* @fileoverview Translation for `semi-spacing` (ESLint) to JSCS\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  target: 'jscs',\n  name: 'disallowSpaceBeforeSemicolon',\n  truthy: true\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/eslint/space-after-keywords.js":"/**\n* @fileoverview Translation for `space-after-keywords` (ESLint) to JSCS\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  target: 'jscs',\n  eval: function(__current__, value) {\n    if (value[0] === 0 || value === 0) {\n      return {}\n    }\n\n    var keywords = ['do', 'for', 'if', 'else', 'switch', 'try', 'catch',\n      'finally', 'void', 'while', 'with', 'typeof', 'function']\n\n    var list = (__current__ || []).concat(keywords)\n\n    if (value[1] === 'always') {\n      return { requireSpaceAfterKeywords: list }\n    }\n\n    return { disallowSpaceAfterKeywords: list }\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/eslint/space-before-blocks.js":"/**\n* @fileoverview Translation for `space-before-blocks` (ESLint) to JSCS\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  target: 'jscs',\n  eval: function(__current__, value) {\n    if (value[0] === 0 || value === 0) {\n      return {}\n    }\n\n    if (value[1] === 'always') {\n      return { requireSpaceBeforeBlockStatements: true }\n    }\n\n    return { disallowSpaceBeforeBlockStatements: true }\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/eslint/space-before-function-paren.js":"/**\n* @fileoverview Translation for `space-before-function-paren` (ESLint) to JSCS\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  target: 'jscs',\n  eval: function(__current__, value) {\n    if (value[0] === 0 || value === 0) {\n      return {}\n    }\n\n    if (value[1] === 'always') {\n      return {\n        requireSpacesInFunctionDeclaration: true,\n        requireSpacesInFunctionExpression: true\n      }\n    }\n\n    return {\n      disallowSpacesInFunctionDeclaration: true,\n      disallowSpacesInFunctionExpression: true,\n      disallowSpacesInFunction: true,\n      disallowSpacesInNamedFunctionExpression: true\n    }\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/eslint/space-infix-ops.js":"/**\n* @fileoverview Translation for `space-infix-ops` (ESLint) to JSCS\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  target: 'jscs',\n  name: 'requireSpaceAfterBinaryOperators',\n  truthy: true\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/eslint/space-in-parens.js":"/**\n* @fileoverview Translation for `space-in-parens` (ESLint) to JSCS\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  target: 'jscs',\n  eval: function(__current__, value) {\n    if (value[0] === 0 || value === 0) {\n      return {}\n    }\n\n    var obj = {}\n\n    var list = null\n\n    if (value[2]) {\n      list = value[2].exceptions.join('').split('')\n    }\n\n    if (value[1] === 'never') {\n      obj.disallowSpacesInsideParentheses = true\n\n      if (list) {\n        obj.disallowSpacesInsideParentheses = {\n          only: list\n        }\n      }\n    } else {\n      obj.requireSpacesInsideParentheses = 'all'\n\n      if (list) {\n        obj.requireSpacesInsideParentheses = {\n          all: true,\n          except: list\n        }\n      }\n    }\n\n    return obj\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/eslint/space-return-throw-case.js":"/**\n* @fileoverview Translation for `space-return-throw-case` (ESLint) to JSCS\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  target: 'jscs',\n  eval: function(__current__, value) {\n    if (value[0] === 0 || value === 0) {\n      return {}\n    }\n\n    var list = (__current__ || []).concat(['return', 'throw', 'case'])\n\n    if (value[1] === 'always') {\n      return { requireSpaceAfterKeywords: list }\n    }\n\n    return { disallowSpaceAfterKeywords: list }\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/eslint/space-unary-ops.js":"/**\n* @fileoverview Translation for `space-unary-ops` (ESLint) to JSCS\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  target: 'jscs',\n  eval: function(__current__, value) {\n    if (value[0] === 0 || value === 0) {\n      return { disallowSpaceAfterPrefixUnaryOperators: true }\n    }\n\n    return { requireSpaceAfterPrefixUnaryOperators: true }\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/eslint/strict.js":"/**\n* @fileoverview Translation for `strict` (ESLint) to JSHint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  target: 'jshint',\n  eval: function(__current__, value) {\n    if (value === 0) {\n      return { globalstrict: true }\n    }\n\n    return { strict: true }\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/eslint/valid-jsdoc.js":"/**\n* @fileoverview Translation for `valid-jsdoc` (ESLint) to JSCS\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  target: 'jscs',\n  eval: function(){\n    return {\n      'requireReturnTypes': true,\n      'requireReturnDescription': true,\n      'requireParamDescription': true\n    }\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/eslint/valid-typeof.js":"/**\n* @fileoverview Translation for `valid-typeof` (ESLint) to JSHint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  target: 'jshint',\n  name: 'notypeof'\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/eslint/wrap-iife.js":"/**\n* @fileoverview Translation for `wrap-iife` (ESLint) to JSCS\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  target: 'jscs',\n  name: 'requireParenthesesAroundIIFE'\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/eslint/yoda.js":"/**\n* @fileoverview Translation for `yoda` (ESLint) to JSCS\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  target: 'jscs',\n  eval: function(__current__, value) {\n    var verb = (value[1] === 'never') ? 'disallow' : 'require'\n\n    var obj = {}\n\n    obj[verb + 'YodaConditions'] = true\n\n    return obj\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jscs/disallowAnonymousFunctions.js":"/**\n* @fileoverview Translation for `disallowAnonymousFunctions` (JSCS) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = 'func-names';\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jscs/disallowArrowFunctions.js":"/**\n* @fileoverview Translation for `disallowArrowFunctions` (JSCS) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  name: 'no-restricted-syntax',\n  truthy: function(__current__) {\n    var attrs = __current__ || []\n\n    attrs.push('ArrowFunctionExpression')\n\n    return attrs\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jscs/disallowCommaBeforeLineBreak.js":"/**\n* @fileoverview Translation for `disallowCommaBeforeLineBreak` (JSCS) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  name: 'comma-style',\n  truthy: [\n  2,\n  'first'\n  ]\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jscs/disallowCurlyBraces.js":"/**\n* @fileoverview Translation for `disallowCurlyBraces` (JSCS) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  name: 'curly',\n  truthy: [\n  2,\n  'multi-line'\n  ]\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jscs/disallowDanglingUnderscores.js":"/**\n* @fileoverview Translation for `disallowDanglingUnderscores` (JSCS) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = 'no-underscore-dangle';\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jscs/disallowEmptyBlocks.js":"/**\n* @fileoverview Translation for `disallowEmptyBlocks` (JSCS) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  name: 'no-empty',\n  truthy: [2, { 'allowEmptyCatch': true }]\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jscs/disallowFunctionDeclarations.js":"/**\n* @fileoverview Translation for `disallowFunctionDeclarations` (JSCS) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  name: 'func-style',\n  truthy: [\n  2,\n  'expression'\n  ]\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jscs/disallowIdentifierNames.js":"/**\n* @fileoverview Translation for `disallowIdentifierNames` (JSCS) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  name: 'id-match',\n  truthy: function(__current__, value) {\n    return [2, ('^(' + value.join('|') + ')$'), {'properties': true}]\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jscs/disallowImplicitTypeConversion.js":"/**\n* @fileoverview Translation for `disallowImplicitTypeConversion` (JSCS) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  name: 'no-implicit-coercion',\n  truthy: function(__current__, value) {\n    var obj = {}\n\n    var counterpart = {\n      'boolean': 'boolean',\n      'string': 'string',\n      'numeric': 'number'\n    }\n\n    for (var name in counterpart) {\n      obj[counterpart[name]] = (value.indexOf(name) >= 0)\n    }\n\n    return [2, obj]\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jscs/disallowKeywordsInComments.js":"/**\n* @fileoverview Translation for `disallowKeywordsInComments` (JSCS) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  name: 'no-warning-comments',\n  truthy: function(__current__, value) {\n    var terms = (value === true) ? ['fixme', 'todo'] : value\n\n    if (typeof terms === 'string') {\n      terms = [terms]\n    }\n\n    return [2, {'terms': terms, 'location': 'anywhere'}]\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jscs/disallowKeywords.js":"/**\n* @fileoverview Translation for `disallowKeywords` (JSCS) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  name: 'no-with',\n  truthy: function(__current__, value) {\n    return value.indexOf('with') > -1 ? 2 : 0\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jscs/disallowKeywordsOnNewLine.js":"/**\n* @fileoverview Translation for `disallowKeywordsOnNewLine` (JSCS) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  name: 'brace-style',\n  truthy: [2, '1tbs', { 'allowSingleLine': true }]\n}\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jscs/disallowMixedSpacesAndTabs.js":"/**\n* @fileoverview Translation for `disallowMixedSpacesAndTabs` (JSCS) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  name: 'no-mixed-spaces-and-tabs',\n  'true': 2,\n  'smart': [\n  2,\n  'smart-tabs'\n  ]\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jscs/disallowMultipleLineBreaks.js":"/**\n* @fileoverview Translation for `disallowMultipleLineBreaks` (JSCS) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = 'no-multiple-empty-lines';\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jscs/disallowMultipleLineStrings.js":"/**\n* @fileoverview Translation for `disallowMultipleLineStrings` (JSCS) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = 'no-multi-str';\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jscs/disallowMultipleSpaces.js":"/**\n* @fileoverview Translation for `disallowMultipleSpaces` (JSCS) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = 'no-multi-spaces';\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jscs/disallowMultipleVarDecl.js":"/**\n* @fileoverview Translation for `disallowMultipleVarDecl` (JSCS) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  name: 'one-var',\n  truthy: function(__current__, value) {\n    if (value === true || value.strict) {\n      return [2, 'never']\n    }\n\n    return [2, { uninitialized: 'always', initialized: 'never' }]\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jscs/disallowNestedTernaries.js":"/**\n* @fileoverview Translation for `disallowNestedTernaries` (JSCS) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = 'no-nested-ternary';\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jscs/disallowOperatorBeforeLineBreak.js":"/**\n* @fileoverview Translation for `disallowOperatorBeforeLineBreak` (JSCS) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = function(__current__, value) {\n  if (Array.isArray(value) && value.indexOf('.') >= 0) {\n    return {\n      'dot-location': [2, 'property'],\n      'operator-linebreak': [2, 'before']\n    }\n  }\n\n  return {\n    'operator-linebreak': [2, 'before']\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jscs/disallowPaddingNewLinesBeforeLineComments.js":"/**\n* @fileoverview Translation for `disallowPaddingNewLinesBeforeLineComments` (JSCS) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  name: 'lines-around-comment',\n  truthy: [\n  2,\n  {\n    'beforeLineComment': false\n  }\n  ]\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jscs/disallowPaddingNewlinesInBlocks.js":"/**\n* @fileoverview Translation for `disallowPaddingNewlinesInBlocks` (JSCS) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  name: 'padded-blocks',\n  truthy: [\n  2,\n  'never'\n  ]\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jscs/disallowParenthesesAroundArrowParam.js":"/**\n* @fileoverview Translation for `disallowParenthesesAroundArrowParam` (JSCS) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  name: 'arrow-parens',\n  truthy: 0,\n  falsy: [\n  2,\n  'always'\n  ]\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jscs/disallowQuotedKeysInObjects.js":"/**\n* @fileoverview Translation for `disallowQuotedKeysInObjects` (JSCS) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  name: 'quote-props',\n  truthy: function(__current__, value) {\n    if (value !== 'allButReserved' && value.allExcept !== 'reserved') {\n      return [2, 'as-needed']\n    }\n\n    return [2, 'as-needed', {'keywords': true}]\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jscs/disallowSemicolons.js":"/**\n* @fileoverview Translation for `disallowSemicolons` (JSCS) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  name: 'semi',\n  truthy: [\n  2,\n  'never'\n  ]\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jscs/disallowSpaceAfterComma.js":"/**\n* @fileoverview Translation for `disallowSpaceAfterComma` (JSCS) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  name: 'comma-spacing',\n  truthy: function(__current__) {\n    if (__current__) {\n      __current__[1].after = false\n\n      return __current__\n    }\n\n    return [2, {\n      after: false\n    }]\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jscs/disallowSpaceAfterKeywords.js":"/**\n* @fileoverview Translation for `disallowSpaceAfterKeywords` (JSCS) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  name: 'keyword-spacing',\n  truthy: function(__current__, value) {\n    var rule = __current__ || [2, {}]\n\n    var overrides = rule[1].overrides = (rule[1].overrides || {})\n\n    if (value === true) {\n      rule[1].after = false\n\n      return rule\n    }\n\n    value.forEach(function(keyword) {\n      overrides[keyword] = overrides[keyword] || {}\n      overrides[keyword].after = false\n    })\n\n    return rule\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jscs/disallowSpaceAfterLineComment.js":"/**\n* @fileoverview Translation for `disallowSpaceAfterLineComment` (JSCS) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  name: 'spaced-comment',\n  truthy: [\n  2,\n  'never'\n  ]\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jscs/disallowSpaceAfterObjectKeys.js":"/**\n* @fileoverview Translation for `disallowSpaceAfterObjectKeys` (JSCS) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  name: 'key-spacing',\n  truthy: function(__current__, value) {\n    if (value.allExcept && value.allExcept[0] === 'aligned') {\n      return [2, { 'align': 'colon' }]\n    }\n\n    return [2, { 'beforeColon': false, 'afterColon': true }]\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jscs/disallowSpaceAfterPrefixUnaryOperators.js":"/**\n* @fileoverview Translation for `disallowSpaceAfterPrefixUnaryOperators` (JSCS) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  name: 'space-unary-ops',\n  truthy: function(__current__, value) {\n    var nonwords = false;\n    var overrides = {};\n\n    if (typeof value === 'object') {\n      nonwords = true;\n\n      value.forEach(function(symbol) {\n        overrides[symbol] = false;\n      });\n    }\n\n    return [2, {\n      nonwords: nonwords,\n      overrides: overrides\n    }]\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jscs/disallowSpaceBeforeBlockStatements.js":"/**\n* @fileoverview Translation for `disallowSpaceBeforeBlockStatements` (JSCS) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  name: 'space-before-blocks',\n  truthy: [\n  2,\n  'never'\n  ]\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jscs/disallowSpaceBeforeComma.js":"/**\n* @fileoverview Translation for `disallowSpaceBeforeComma` (JSCS) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  name: 'comma-spacing',\n  truthy: function(__current__) {\n    if (__current__) {\n      __current__[1].before = false\n\n      return __current__\n    }\n\n    return [2, {\n      before: false\n    }]\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jscs/disallowSpaceBeforeKeywords.js":"/**\n* @fileoverview Translation for `disallowSpaceBeforeKeywords` (JSCS) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  name: 'keyword-spacing',\n  truthy: function(__current__, value) {\n    var rule = __current__ || [2, {}]\n\n    var overrides = rule[1].overrides = (rule[1].overrides || {})\n\n    if (value === true) {\n      rule[1].before = false\n\n      return rule\n    }\n\n    value.forEach(function(keyword) {\n      overrides[keyword] = overrides[keyword] || {}\n      overrides[keyword].before = false\n    })\n\n    return rule\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jscs/disallowSpaceBeforeObjectValues.js":"/**\n* @fileoverview Translation for `disallowSpaceBeforeObjectValues` (JSCS) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  name: 'key-spacing',\n  truthy: function(__current__) {\n    if (!__current__) {\n      return [2, {'afterColon': false}]\n    }\n\n    __current__[1].afterColon = false\n\n    return __current__\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jscs/disallowSpaceBeforePostfixUnaryOperators.js":"/**\n* @fileoverview Translation for `disallowSpaceBeforePostfixUnaryOperators` (JSCS) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  name: 'space-unary-ops',\n  truthy: [\n  2,\n  {\n    'words': false,\n    'nonwords': false\n  }\n  ]\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jscs/disallowSpaceBeforeSemicolon.js":"/**\n* @fileoverview Translation for `disallowSpaceBeforeSemicolon` (JSCS) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  name: 'semi-spacing',\n  truthy: [\n  2,\n  {\n    'before': false,\n    'after': true\n  }\n  ]\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jscs/disallowSpacesInAnonymousFunctionExpression.js":"/**\n* @fileoverview Translation for `disallowSpacesInAnonymousFunctionExpression` (JSCS) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = function(__current__, value) {\n    if (value.beforeOpeningRoundBrace) {\n      return {\n        'space-before-function-paren': [2, 'never']\n      }\n    }\n\n    return {}\n  };\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jscs/disallowSpacesInCallExpression.js":"/**\n* @fileoverview Translation for `disallowSpacesInCallExpression` (JSCS) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = 'no-spaced-func';\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jscs/disallowSpacesInFunctionDeclaration.js":"/**\n* @fileoverview Translation for `disallowSpacesInFunctionDeclaration` (JSCS) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = function(__current__, value) {\n  if (value.beforeOpeningRoundBrace) {\n    return {\n      'space-before-function-paren': [2, {\n        'anonymous': 'ignore',\n        'named': 'never'\n      }]\n    }\n  }\n\n  return {}\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jscs/disallowSpacesInFunctionExpression.js":"/**\n* @fileoverview Translation for `disallowSpacesInFunctionExpression` (JSCS) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = function(__current__, value) {\n    if (value.beforeOpeningRoundBrace) {\n      return {\n        'space-before-function-paren': [2, 'never']\n      }\n    }\n\n    return {}\n  };\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jscs/disallowSpacesInFunction.js":"/**\n* @fileoverview Translation for `disallowSpacesInFunction` (JSCS) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = function(__current__, value) {\n    if (value.beforeOpeningRoundBrace) {\n      return {\n        'space-before-function-paren': [2, 'never']\n      }\n    }\n\n    return {}\n  };\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jscs/disallowSpacesInGenerator.js":"/**\n* @fileoverview Translation for `disallowSpacesInGenerator` (JSCS) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  name: 'generator-star-spacing',\n  truthy: function(__current__, value) {\n    var obj = __current__ ? __current__[1] : {}\n\n    if (value.beforeStar) {\n      obj.before = false\n    }\n\n    if (value.afterStar) {\n      obj.after = false\n    }\n\n    return [2, obj]\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jscs/disallowSpacesInNamedFunctionExpression.js":"/**\n* @fileoverview Translation for `disallowSpacesInNamedFunctionExpression` (JSCS) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = function(__current__, value) {\n  if (value.beforeOpeningRoundBrace) {\n    return {\n      'space-before-function-paren': [2, {\n        'anonymous': 'ignore',\n        'named': 'never'\n      }]\n    }\n  }\n\n  return {}\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jscs/disallowSpacesInsideArrayBrackets.js":"/**\n* @fileoverview Translation for `disallowSpacesInsideArrayBrackets` (JSCS) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  name: 'array-bracket-spacing',\n  truthy: function(__current__, value) {\n    var rule = __current__ || [2, 'never', {}]\n\n    if (value === 'nested') {\n      rule[2].arraysInArrays = true\n    }\n\n    return rule\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jscs/disallowSpacesInsideObjectBrackets.js":"/**\n* @fileoverview Translation for `disallowSpacesInsideObjectBrackets` (JSCS) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  name: 'array-bracket-spacing',\n  truthy: function(__current__, value) {\n    var rule = __current__ || [2, 'never', {}]\n\n    rule[2].singleValue = true\n\n    if (value === 'nested') {\n      rule[2].objectsInArrays = true\n    }\n\n    return rule\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jscs/disallowSpacesInsideParentheses.js":"/**\n* @fileoverview Translation for `disallowSpacesInsideParentheses` (JSCS) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  name: 'space-in-parens',\n  truthy: function(__current__, value) {\n    if (value === true) {\n      return [2, 'never']\n    }\n\n    var exceptions = []\n\n    var only = value.only\n\n    var signals = ['{}', '()', '[]']\n\n    signals.forEach(function(str) {\n      if (only.indexOf(str[0]) > -1 || only.indexOf(str[1]) > -1) {\n        if (exceptions.indexOf(str) === -1) {\n          exceptions.push(str)\n        }\n      }\n    })\n\n    return [2, 'never', { 'exceptions': exceptions }]\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jscs/disallowSpacesInsideParenthesizedExpression.js":"/**\n* @fileoverview Translation for `disallowSpacesInsideParenthesizedExpression` (JSCS) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  name: 'space-in-parens',\n  truthy: function(__current__, value) {\n    if (value === true) {\n      return [2, 'never']\n    }\n\n    var exceptions = []\n\n    var except = value.allExcept\n\n    if (value.allExcept.indexOf('{') > -1 || except.indexOf('}' > -1)) {\n      exceptions.push('{}')\n    }\n\n    return [2, 'never', { 'exceptions': exceptions }]\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jscs/disallowTabs.js":"/**\n* @fileoverview Translation for `disallowTabs` (JSCS) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  name: 'indent',\n  truthy: function(__current__) {\n    var tabs = 2;\n\n    if (__current__ && typeof __current__[1] === 'number') {\n      tabs = __current__[1];\n    }\n\n    return [2, tabs, {\n      'SwitchCase': 1\n    }]\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jscs/disallowTrailingComma.js":"/**\n* @fileoverview Translation for `disallowTrailingComma` (JSCS) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  name: 'comma-dangle',\n  truthy: [\n  2,\n  'never'\n  ]\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jscs/disallowTrailingWhitespace.js":"/**\n* @fileoverview Translation for `disallowTrailingWhitespace` (JSCS) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  name: 'no-trailing-spaces',\n  truthy: function(__current__, value) {\n    return (value === true) ? 2 : [2, { 'skipBlankLines': true }]\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jscs/disallowUnusedParams.js":"/**\n* @fileoverview Translation for `disallowUnusedParams` (JSCS) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  name: 'no-unused-vars',\n  truthy: function(__current__) {\n    if (__current__) {\n      __current__[1].args = 'all'\n\n      return __current__\n    }\n\n    return [2, {\n      vars: 'local',\n      args: 'all'\n    }]\n  }\n}\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jscs/disallowUnusedVariables.js":"/**\n* @fileoverview Translation for `disallowUnusedVariables` (JSCS) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  name: 'no-unused-vars',\n  truthy: function(__current__) {\n    if (__current__) {\n      __current__[1].vars = 'all'\n\n      return __current__\n    }\n\n    return [2, {\n      vars: 'all',\n      args: 'none'\n    }]\n  }\n}\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jscs/disallowVar.js":"/**\n* @fileoverview Translation for `disallowVar` (JSCS) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = 'no-var';\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jscs/disallowYodaConditions.js":"/**\n* @fileoverview Translation for `disallowYodaConditions` (JSCS) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  name: 'yoda',\n  truthy: [\n  2,\n  'never'\n  ]\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jscs/jsDoc.js":"/**\n* @fileoverview Translation for `jsDoc` (JSCS) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = 'valid-jsdoc';\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jscs/maximumLineLength.js":"/**\n* @fileoverview Translation for `maximumLineLength` (JSCS) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  name: 'max-len',\n  truthy: function(__current__, value) {\n    return value.value ? [2, value.value] : [2, value]\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jscs/requireAlignedObjectValues.js":"/**\n* @fileoverview Translation for `requireAlignedObjectValues` (JSCS) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  name: 'key-spacing',\n  truthy: [\n  2,\n  {\n    'align': 'colon'\n  }\n  ]\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jscs/requireArrowFunctions.js":"/**\n* @fileoverview Translation for `requireArrowFunctions` (JSCS) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = 'prefer-arrow-callback';\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jscs/requireCamelCaseOrUpperCaseIdentifiers.js":"/**\n* @fileoverview Translation for `requireCamelCaseOrUpperCaseIdentifiers` (JSCS) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  name: 'camelcase',\n  truthy: function(__current__, value) {\n    var checkProperties = (value === true) ? 'never' : 'always'\n\n    return [2, { 'properties': checkProperties }]\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jscs/requireCapitalizedConstructorsNew.js":"/**\n* @fileoverview Translation for `requireCapitalizedConstructorsNew` (JSCS) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  name: 'new-cap',\n  truthy: function(__current__, value) {\n    if (value !== true) {\n      return [2, {\n        capIsNewExceptions: value.allExcept\n      }]\n    }\n\n    return [2, {\n      capIsNewExceptions: []\n    }]\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jscs/requireCommaBeforeLineBreak.js":"/**\n* @fileoverview Translation for `requireCommaBeforeLineBreak` (JSCS) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  name: 'comma-style',\n  truthy: [\n  2,\n  'last'\n  ]\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jscs/requireCurlyBraces.js":"/**\n* @fileoverview Translation for `requireCurlyBraces` (JSCS) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  name: 'curly',\n  truthy: [\n  2,\n  'all'\n  ]\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jscs/requireDotNotation.js":"/**\n* @fileoverview Translation for `requireDotNotation` (JSCS) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  name: 'dot-notation',\n  truthy: function(__current__, value) {\n    var rules = {}\n\n    if (value === true) {\n      return 2\n    }\n\n    if (value === 'except_snake_case') {\n      return [2, { 'allowPattern': '^[a-z]+(_[a-z]+)+$' }]\n    }\n\n    if (value.allExcept.indexOf('keywords') > -1) {\n      rules.allowKeywords = true\n    }\n\n    if (value.allExcept.indexOf('snake_case') > -1) {\n      rules.allowPattern = '^[a-z]+(_[a-z]+)+$'\n    }\n\n    return [2, rules]\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jscs/requireEarlyReturn.js":"/**\n* @fileoverview Translation for `requireEarlyReturn` (JSCS) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = 'no-else-return';\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jscs/requireEnhancedObjectLiterals.js":"/**\n* @fileoverview Translation for `requireEnhancedObjectLiterals` (JSCS) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = 'object-shorthand';\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jscs/requireFunctionDeclarations.js":"/**\n* @fileoverview Translation for `requireFunctionDeclarations` (JSCS) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  name: 'func-style',\n  truthy: [\n  2,\n  'declaration'\n  ]\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jscs/requireImportAlphabetized.js":"/**\n* @fileoverview Translation for `requireImportAlphabetized` (JSCS) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = 'sort-imports';\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jscs/requireKeywordsOnNewLine.js":"/**\n* @fileoverview Translation for `requireKeywordsOnNewLine` (JSCS) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  name: 'brace-style',\n  truthy: [\n    2,\n    'stroustrup',\n    {\n      'allowSingleLine': true\n    }\n  ]\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jscs/requireLineFeedAtFileEnd.js":"/**\n* @fileoverview Translation for `requireLineFeedAtFileEnd` (JSCS) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = 'eol-last';\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jscs/requireMultipleVarDecl.js":"/**\n* @fileoverview Translation for `requireMultipleVarDecl` (JSCS) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  name: 'one-var',\n  truthy: [\n    2,\n    'always'\n  ]\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jscs/requireNamedUnassignedFunctions.js":"/**\n* @fileoverview Translation for `requireNamedUnassignedFunctions` (JSCS) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = 'func-names';\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jscs/requireOperatorBeforeLineBreak.js":"/**\n* @fileoverview Translation for `requireOperatorBeforeLineBreak` (JSCS) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  name: 'operator-linebreak',\n  truthy: [\n  2,\n  'after'\n  ]\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jscs/requirePaddingNewLineAfterVariableDeclaration.js":"/**\n* @fileoverview Translation for `requirePaddingNewLineAfterVariableDeclaration` (JSCS) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  name: 'newline-after-var',\n  truthy: [\n  2,\n  'always'\n  ]\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jscs/requirePaddingNewLinesBeforeLineComments.js":"/**\n* @fileoverview Translation for `requirePaddingNewLinesBeforeLineComments` (JSCS) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  name: 'lines-around-comment',\n  truthy: [\n  2,\n  {\n    'beforeLineComment': true\n  }\n  ]\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jscs/requirePaddingNewlinesInBlocks.js":"/**\n* @fileoverview Translation for `requirePaddingNewlinesInBlocks` (JSCS) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  name: 'padded-blocks',\n  truthy: [\n  2,\n  'always'\n  ]\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jscs/requireParenthesesAroundArrowParam.js":"/**\n* @fileoverview Translation for `requireParenthesesAroundArrowParam` (JSCS) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = 'arrow-parens';\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jscs/requireParenthesesAroundIIFE.js":"/**\n* @fileoverview Translation for `requireParenthesesAroundIIFE` (JSCS) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = 'wrap-iife';\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jscs/requireQuotedKeysInObjects.js":"/**\n* @fileoverview Translation for `requireQuotedKeysInObjects` (JSCS) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  name: 'quote-props',\n  truthy: [\n  2,\n  'always'\n  ]\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jscs/requireSemicolons.js":"/**\n* @fileoverview Translation for `requireSemicolons` (JSCS) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  name: 'semi',\n  truthy: [\n  2,\n  'always'\n  ]\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jscs/requireSpaceAfterBinaryOperators.js":"/**\n* @fileoverview Translation for `requireSpaceAfterBinaryOperators` (JSCS) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  name: 'space-infix-ops',\n  truthy: 2\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jscs/requireSpaceAfterComma.js":"/**\n* @fileoverview Translation for `requireSpaceAfterComma` (JSCS) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  name: 'comma-spacing',\n  truthy: function(__current__) {\n    if (__current__) {\n      __current__[1].after = true\n\n      return __current__\n    }\n\n    return [2, {\n      after: true\n    }]\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jscs/requireSpaceAfterKeywords.js":"/**\n* @fileoverview Translation for `requireSpaceAfterKeywords` (JSCS) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n    name: 'keyword-spacing',\n    truthy: [ 2, {} ]\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jscs/requireSpaceAfterLineComment.js":"/**\n* @fileoverview Translation for `requireSpaceAfterLineComment` (JSCS) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  name: 'spaced-comment',\n  truthy: [\n  2,\n  'always'\n  ]\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jscs/requireSpaceAfterObjectKeys.js":"/**\n* @fileoverview Translation for `requireSpaceAfterObjectKeys` (JSCS) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  name: 'key-spacing',\n  truthy: function(__current__) {\n    if (__current__) {\n      __current__[1].beforeColon = true\n\n      return __current__\n    }\n\n    return [2, { 'beforeColon': true }]\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jscs/requireSpaceAfterPrefixUnaryOperators.js":"/**\n* @fileoverview Translation for `requireSpaceAfterPrefixUnaryOperators` (JSCS) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  name: 'space-unary-ops',\n  truthy: function(__current__, value) {\n    var nonwords = true;\n    var overrides = {};\n\n    if (typeof value === 'object') {\n      nonwords = false;\n\n      value.forEach(function(symbol) {\n        overrides[symbol] = true;\n      });\n    }\n\n    return [2, {\n      nonwords: nonwords,\n      overrides: overrides\n    }]\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jscs/requireSpaceBeforeBinaryOperators.js":"/**\n* @fileoverview Translation for `requireSpaceBeforeBinaryOperators` (JSCS) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  name: 'space-infix-ops',\n  truthy: 2\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jscs/requireSpaceBeforeBlockStatements.js":"/**\n* @fileoverview Translation for `requireSpaceBeforeBlockStatements` (JSCS) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  name: 'space-before-blocks',\n  truthy: [\n  2,\n  'always'\n  ]\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jscs/requireSpaceBeforeComma.js":"/**\n* @fileoverview Translation for `requireSpaceBeforeComma` (JSCS) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  name: 'comma-spacing',\n  truthy: function(__current__) {\n    if (__current__) {\n      __current__[1].before = true\n\n      return __current__\n    }\n\n    return [2, {\n      before: true\n    }]\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jscs/requireSpaceBeforeKeywords.js":"/**\n* @fileoverview Translation for `requireSpaceBeforeKeywords` (JSCS) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  name: 'keyword-spacing',\n  truthy: function(__current__, value) {\n    var rule = __current__ || [2, {}]\n\n    var overrides = rule[1].overrides = (rule[1].overrides || {})\n\n    if (value === true) {\n      rule[1].before = true\n\n      return rule\n    }\n\n    value.forEach(function(keyword) {\n      overrides[keyword] = overrides[keyword] || {}\n      overrides[keyword].before = true\n    })\n\n    return rule\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jscs/requireSpaceBeforeObjectValues.js":"/**\n* @fileoverview Translation for `requireSpaceBeforeObjectValues` (JSCS) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  name: 'key-spacing',\n  truthy: function(__current__) {\n    if (__current__) {\n      __current__[1].afterColon = true\n\n      return __current__\n    }\n\n    return [2, { 'afterColon': true }]\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jscs/requireSpaceBeforePostfixUnaryOperators.js":"/**\n* @fileoverview Translation for `requireSpaceBeforePostfixUnaryOperators` (JSCS) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  name: 'space-unary-ops',\n  truthy: [\n  2,\n  {\n    'words': true,\n    'nonwords': true\n  }\n  ]\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jscs/requireSpacesInAnonymousFunctionExpression.js":"/**\n* @fileoverview Translation for `requireSpacesInAnonymousFunctionExpression` (JSCS) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = function(__current__, value) {\n    if (value.beforeOpeningRoundBrace) {\n      return {\n        'space-before-function-paren': [2, 'always']\n      }\n    }\n\n    return {}\n  };\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jscs/requireSpacesInFunctionDeclaration.js":"/**\n* @fileoverview Translation for `requireSpacesInFunctionDeclaration` (JSCS) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = function(__current__, value) {\n    if (value.beforeOpeningRoundBrace) {\n      return {\n        'space-before-function-paren': [2, 'always']\n      }\n    }\n\n    return {}\n  };\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jscs/requireSpacesInFunctionExpression.js":"/**\n* @fileoverview Translation for `requireSpacesInFunctionExpression` (JSCS) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = function(__current__, value) {\n    if (value.beforeOpeningRoundBrace) {\n      return {\n        'space-before-function-paren': [2, 'always']\n      }\n    }\n\n    return {}\n  };\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jscs/requireSpacesInFunction.js":"/**\n* @fileoverview Translation for `requireSpacesInFunction` (JSCS) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = function(__current__, value) {\n    if (value.beforeOpeningRoundBrace) {\n      return {\n        'space-before-function-paren': [2, 'always']\n      }\n    }\n\n    return {}\n  };\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jscs/requireSpacesInGenerator.js":"/**\n* @fileoverview Translation for `requireSpacesInGenerator` (JSCS) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  name: 'generator-star-spacing',\n  truthy: function(__current__, value) {\n    var obj = __current__ ? __current__[1] : {}\n\n    if (value.beforeStar) {\n      obj.before = true\n    }\n\n    if (value.afterStar) {\n      obj.after = true\n    }\n\n    return [2, obj]\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jscs/requireSpacesInNamedFunctionExpression.js":"/**\n* @fileoverview Translation for `requireSpacesInNamedFunctionExpression` (JSCS) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = function(__current__, value) {\n    if (value.beforeOpeningRoundBrace) {\n      return {\n        'space-before-function-paren': [2, 'always']\n      }\n    }\n\n    return {}\n  };\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jscs/requireSpacesInsideArrayBrackets.js":"/**\n* @fileoverview Translation for `requireSpacesInsideArrayBrackets` (JSCS) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  name: 'array-bracket-spacing',\n  truthy: function(__current__, value) {\n    if (value === 'all' || value === true) {\n      return [2, 'always']\n    }\n\n    value = value.allExcept\n\n    var rules = {}\n\n    if (value.indexOf('{') > -1 || value.indexOf('}') > -1) {\n      rules.objectsInArrays = false\n    }\n\n    if (value.indexOf('[') > -1 || value.indexOf(']') > -1) {\n      rules.arraysInArrays = false\n    }\n\n    return [2, 'always', rules]\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jscs/requireSpacesInsideObjectBrackets.js":"/**\n* @fileoverview Translation for `requireSpacesInsideObjectBrackets` (JSCS) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  name: 'array-bracket-spacing',\n  truthy: function(__current__, value) {\n    if (value === 'all' || value === true) {\n      return [2, 'always']\n    }\n\n    value = value.allExcept\n\n    var rules = {}\n\n    if (value.indexOf('{') > -1 || value.indexOf('}') > -1) {\n      rules.objectsInArrays = false\n    }\n\n    if (value.indexOf('[') > -1 || value.indexOf(']') > -1) {\n      rules.arraysInArrays = false\n    }\n\n    return [2, 'always', rules]\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jscs/requireSpacesInsideParentheses.js":"/**\n* @fileoverview Translation for `requireSpacesInsideParentheses` (JSCS) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  name: 'space-in-parens',\n  truthy: function(__current__, value) {\n    if (value === 'all') {\n      return [2, 'always']\n    }\n\n    var exceptions = []\n\n    var except = value.except\n\n    var signals = ['{}', '()', '[]']\n\n    signals.forEach(function(str) {\n      if (except.indexOf(str[0]) > -1 || except.indexOf(str[1]) > -1) {\n        if (exceptions.indexOf(str) === -1) {\n          exceptions.push(str)\n        }\n      }\n    })\n\n    return [2, 'always', { 'exceptions': exceptions }]\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jscs/requireSpacesInsideParenthesizedExpression.js":"/**\n* @fileoverview Translation for `requireSpacesInsideParenthesizedExpression` (JSCS) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  name: 'space-in-parens',\n  truthy: function(__current__, value) {\n    if (value === true) {\n      return [2, 'always']\n    }\n\n    var exceptions = []\n\n    var except = value.allExcept\n\n    if (value.allExcept.indexOf('{') > -1 || except.indexOf('}') > -1) {\n      exceptions.push('{}')\n    }\n\n    return [2, 'always', { 'exceptions': exceptions }]\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jscs/requireSpread.js":"/**\n* @fileoverview Translation for `requireSpread` (JSCS) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = 'prefer-spread';\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jscs/requireTemplateStrings.js":"/**\n* @fileoverview Translation for `requireTemplateStrings` (JSCS) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  name: 'quotes',\n  truthy: [\n  2,\n  'backtick'\n  ]\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jscs/requireTrailingComma.js":"/**\n* @fileoverview Translation for `requireTrailingComma` (JSCS) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  name: 'comma-dangle',\n  truthy: function(__current__, value) {\n    return [2, (value === true ? 'always' : 'always-multiline')]\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jscs/requireUseStrict.js":"/**\n* @fileoverview Translation for `requireUseStrict` (JSCS) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = [2, 'global'];\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jscs/requireVarDeclFirst.js":"/**\n* @fileoverview Translation for `requireVarDeclFirst` (JSCS) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = 'vars-on-top';\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jscs/requireYodaConditions.js":"/**\n* @fileoverview Translation for `requireYodaConditions` (JSCS) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  name: 'yoda',\n  truthy: [\n  2,\n  'always'\n  ]\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jscs/safeContextKeyword.js":"/**\n* @fileoverview Translation for `safeContextKeyword` (JSCS) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  name: 'consistent-this',\n  truthy: function(__current__, value) {\n    if (typeof value === 'string') {\n      return [2, value]\n    }\n\n    return [2, value[0]]\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jscs/validateCommentPosition.js":"/**\n* @fileoverview Translation for `validateCommentPosition` (JSCS) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = function(__current__, value) {\n  if (value.position === 'beside') {\n    return {\n      'no-inline-comments': 2\n    }\n  }\n\n  return {}\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jscs/validateIndentation.js":"/**\n* @fileoverview Translation for `validateIndentation` (JSCS) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  name: 'indent',\n  truthy: function(__current__, value) {\n    value = value.value || value\n\n    if (typeof value === 'string') {\n      return [2, 'tab', {'SwitchCase': 1}]\n    }\n\n    if (typeof value === 'number') {\n      return [2, value, {'SwitchCase': 1}]\n    }\n\n    return [2, value, {'SwitchCase': 1}]\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jscs/validateLineBreaks.js":"/**\n* @fileoverview Translation for `validateLineBreaks` (JSCS) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  name: 'linebreak-style',\n  truthy: function(__current__, value) {\n    var sys = (value === 'CLRF') ? 'windows' : 'unix'\n\n    return [2, sys]\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jscs/validateQuoteMarks.js":"/**\n* @fileoverview Translation for `validateQuoteMarks` (JSCS) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  name: 'quotes',\n  truthy: function(__current__, value) {\n    if (value === '\"' || value === true) {\n      return [2, 'double']\n    }\n\n    if (value === '\\'') {\n      return [2, 'single']\n    }\n\n    var mark = value.mark === '\"' ? 'double' : 'single'\n    var escape = value.escape\n\n    if (escape) {\n      return [2, mark, { avoidEscape: true }]\n    }\n\n    return [2, mark]\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jshint/asi.js":"/**\n* @fileoverview Translation for `asi` (JSHint) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  name: 'semi',\n  truthy: [\n  2,\n  'always'\n  ]\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jshint/bitwise.js":"/**\n* @fileoverview Translation for `bitwise` (JSHint) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = 'no-bitwise';\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jshint/boss.js":"/**\n* @fileoverview Translation for `boss` (JSHint) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  name: 'no-cond-assign',\n  truthy: [\n  2,\n  'except-parens'\n  ]\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jshint/debug.js":"/**\n* @fileoverview Translation for `debug` (JSHint) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = 'no-debugger';\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jshint/elision.js":"/**\n* @fileoverview Translation for `elision` (JSHint) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = 'no-sparse-arrays';\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jshint/_env.js":"/**\n* @fileoverview Translation for `_env` (JSHint) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = ['browser', 'jasmine', 'jquery', 'mocha', 'node', 'phantom,phantomjs', 'prototypejs', 'qunit', 'shelljs', 'worker', 'dojo,amd'];\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jshint/eqnull.js":"/**\n* @fileoverview Translation for `eqnull` (JSHint) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  name: 'no-eq-null',\n  truthy: 2,\n  falsy: 0\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jshint/evil.js":"/**\n* @fileoverview Translation for `evil` (JSHint) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = 'no-eval';\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jshint/expr.js":"/**\n* @fileoverview Translation for `expr` (JSHint) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = 'no-unused-expressions';\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jshint/forin.js":"/**\n* @fileoverview Translation for `forin` (JSHint) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = 'guard-for-in';\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jshint/freeze.js":"/**\n* @fileoverview Translation for `freeze` (JSHint) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  name: 'no-extend-native',\n  truthy: 2,\n  falsy: 0\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jshint/funcscope.js":"/**\n* @fileoverview Translation for `funcscope` (JSHint) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = 'block-scoped-var';\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jshint/globalstrict.js":"/**\n* @fileoverview Translation for `globalstrict` (JSHint) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  name: 'strict',\n  truthy: [2, 'global']\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jshint/immed.js":"/**\n* @fileoverview Translation for `immed` (JSHint) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  name: 'wrap-iife',\n  truthy: [\n  2,\n  'any'\n  ]\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jshint/iterator.js":"/**\n* @fileoverview Translation for `iterator` (JSHint) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = 'no-iterator';\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jshint/latedef.js":"/**\n* @fileoverview Translation for `latedef` (JSHint) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  name: 'no-use-before-define',\n  truthy: [2, { 'functions': false }]\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jshint/laxbreak.js":"/**\n* @fileoverview Translation for `laxbreak` (JSHint) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = 'linebreak-style';\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jshint/laxcomma.js":"/**\n* @fileoverview Translation for `laxcomma` (JSHint) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  name: 'comma-style',\n  truthy: [\n  2,\n  'last'\n  ],\n  falsy: [\n  2,\n  'first'\n  ]\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jshint/loopfunc.js":"/**\n* @fileoverview Translation for `loopfunc` (JSHint) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = 'no-loop-func';\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jshint/maxcomplexity.js":"/**\n* @fileoverview Translation for `maxcomplexity` (JSHint) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  name: 'complexity',\n  truthy: function(__current__, value) {\n    return [2, value]\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jshint/maxdepth.js":"/**\n* @fileoverview Translation for `maxdepth` (JSHint) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  name: 'max-depth',\n  truthy: function(__current__, value) {\n    return [2, value]\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jshint/maxlen.js":"/**\n* @fileoverview Translation for `maxlen` (JSHint) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  name: 'max-len',\n  truthy: function(__current__, value) {\n    return [2, {\n      code: value,\n      ignoreComments: true\n    }]\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jshint/maxparams.js":"/**\n* @fileoverview Translation for `maxparams` (JSHint) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  name: 'max-params',\n  truthy: function(__current__, value) {\n    return [2, value]\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jshint/maxstatements.js":"/**\n* @fileoverview Translation for `maxstatements` (JSHint) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  name: 'max-statements',\n  truthy: function(__current__, value) {\n    return [2, value]\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jshint/multistr.js":"/**\n* @fileoverview Translation for `multistr` (JSHint) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = 'no-multi-str';\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jshint/newcap.js":"/**\n* @fileoverview Translation for `newcap` (JSHint) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = 'new-cap';\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jshint/noarg.js":"/**\n* @fileoverview Translation for `noarg` (JSHint) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = 'no-caller';\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jshint/nocomma.js":"/**\n* @fileoverview Translation for `nocomma` (JSHint) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = 'no-sequences';\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jshint/noempty.js":"/**\n* @fileoverview Translation for `noempty` (JSHint) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = 'no-empty';\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jshint/nonbsp.js":"/**\n* @fileoverview Translation for `nonbsp` (JSHint) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = 'no-irregular-whitespace';\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jshint/nonew.js":"/**\n* @fileoverview Translation for `nonew` (JSHint) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = 'no-new';\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jshint/notypeof.js":"/**\n* @fileoverview Translation for `notypeof` (JSHint) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = 'valid-typeof';\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jshint/noyield.js":"/**\n* @fileoverview Translation for `noyield` (JSHint) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = 'require-yield';\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jshint/plusplus.js":"/**\n* @fileoverview Translation for `plusplus` (JSHint) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = 'no-plusplus';\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jshint/proto.js":"/**\n* @fileoverview Translation for `proto` (JSHint) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = 'no-proto';\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jshint/quotmark.js":"/**\n* @fileoverview Translation for `quotmark` (JSHint) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  name: 'quotes',\n  truthy: [\n  2,\n  'single'\n  ]\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jshint/scripturl.js":"/**\n* @fileoverview Translation for `scripturl` (JSHint) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = 'no-script-url';\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jshint/shadow.js":"/**\n* @fileoverview Translation for `shadow` (JSHint) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  name: 'no-shadow',\n  eval: function(__current__, value) {\n    switch (value) {\n      case true:\n        return 0\n\n      case 'inner':\n      case false:\n        return 2\n\n      default:\n        return [2, {\n          'builtinGlobals': true,\n          'hoist': 'all'\n        }]\n    }\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jshint/singleGroups.js":"/**\n* @fileoverview Translation for `singleGroups` (JSHint) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  name: 'no-extra-parens',\n  truthy: 0,\n  falsy: 2\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jshint/sub.js":"/**\n* @fileoverview Translation for `sub` (JSHint) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n  name: 'dot-notation',\n  truthy: 0,\n  falsy: 2\n};\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jshint/supernew.js":"/**\n* @fileoverview Translation for `supernew` (JSHint) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = ['no-new-func', 'no-new-wrappers'];\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jshint/undef.js":"/**\n* @fileoverview Translation for `undef` (JSHint) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = 'no-undef';\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jshint/unused.js":"/**\n* @fileoverview Translation for `unused` (JSHint) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = 'no-unused-vars';\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jshint/validthis.js":"/**\n* @fileoverview Translation for `validthis` (JSHint) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = 'no-invalid-this';\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jshint/varstmt.js":"/**\n* @fileoverview Translation for `varstmt` (JSHint) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = 'no-var';\n","/home/travis/build/npmtest/node-npmtest-polyjuice/node_modules/polyjuice/lib/dictionaries/jshint/withstmt.js":"/**\n* @fileoverview Translation for `withstmt` (JSHint) to ESLint\n* @author Breno Lima de Freitas <https://breno.io>\n* @copyright 2016 Breno Lima de Freitas. All rights reserved.\n* See LICENSE file in root directory for full license.\n*/\n\n'use strict'\n\n//------------------------------------------------------------------------------\n// Rule Translation Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = 'no-with';\n"}